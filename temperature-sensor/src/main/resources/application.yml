server:
    port: 8082
spring:
    application:
        name: temperature-sensor
    datasource:
        password: postgres
        url: jdbc:postgresql://localhost:5432/sensormanager
        username: postgres
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                format_sql: true
        show-sql: false
        open-in-view: false
    devtools:
        livereload:
            port: 35730
#    stream:
#        bindings:
#            sensor-value-out-0:
#                destination: sensor-value
##                https://stackoverflow:com/questions/73851045/setting-partition-count-in-kafka-in-spring-boot-using-application-yml
#                producer:
#                    partition-count: 1
#                    replica-count: 1
#            sensor-value-change-out-0:
#                destination: sensor-value-change
#                producer:
#                    partition-count: 1
#                    replica-count: 1
    kafka:
        consumer:
            bootstrap-servers: localhost:9092
            group-id: json
#            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        producer:
            bootstrap-servers: localhost:9092
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer


sensor-manager:
    topic:
        sensor-value: sensor-value
        sensor-value-change: sensor-value-change
        last-sensor-value: last-sensor-value
        stream-window: 60
    pageSize: 10

logging:
    level:
        root: info
        com:
            sensor:
                temperaturesensor:
                    service: debug
    pattern:
        level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
    endpoints:
        web:
            exposure:
                include: '*'
    tracing:
        sampling:
            probability: 1.0
