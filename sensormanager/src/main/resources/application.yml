app:
    kafka:
        producer:
            topic: ${sensormanager.topic.sensorValue}:1:1
server:
    port: 8081
    servlet:
        context-path: /sensormanager
spring:
    application:
        name: sensormanager
    datasource:
        password: postgres
        url: jdbc:postgresql://localhost:5432/sensormanager
        username: postgres
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                format_sql: true
        show-sql: false
        defer-datasource-initialization: true
        #https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
        open-in-view: false
    kafka:
        bootstrap-servers: localhost:9092
        producer:
            retries: 0
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    sql:
        init:
            mode: always
    output:
        ansi:
            enabled: DETECT
    cloud:
        function:
            definition: sensorEcho
        stream:
            bindings:
                sensorEcho-out-0:
                    destination: sensor-echo-topic
            kafka:
                binder:
                    brokers: localhost:9092
        loadbalancer:
            ribbon:
                enabled: false
    graphql:
        graphiql:
            enabled: true
#            mode: always

#    mvc:
#        converters:
#            preferred-json-mapper: jsonb
eureka:
    client:
#        enabled: false
        serviceUrl:
            defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
        register-with-eureka: true
        fetch-registry: true
    instance:
        hostname: localhost
hibernate:
    dialect: org.hibernate.dialect.PostgreSQLDialect

graphql:
    servlet:
        maxQueryDepth: 5
        exception-handlers-enabled: true

sensor-manager:
    token:
        secret: ${JWT_SECRET:secret}
        access-expires: 600000
        refresh-expires: 1800000
    topic:
        sensor-value: sensor-value

camel:
    component:
        kafka:
            brokers: localhost:9092
        paho-mqtt5:
            broker-url: 'tcp://192.168.50.150:1883'
            user-name: mosquito
            password: mosquito123

logging:
    level:
        #root: info
        com.sensor.sensormanager.config: info
        org.eclipse.paho.mqttv5.client.internal: error
    pattern:
        ##console: "%d %-5level %logger : %msg%n"
        ##file: "%d %-5level [%thread] %logger : %msg%n"
        level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
    ##https://mkyong.com/spring-boot/spring-boot-slf4j-logging-example/
    ##file: sensor-manager.log

management:
    endpoints:
        web:
            exposure:
                include: '*'
    tracing:
        sampling:
            probability: 1.0

#logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]){yellow} %clr(:){red} %clr(%m){faint}%n"
